<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PinkGranite</title>
    <link>pinkgranite.github.io/</link>
    <description>Recent content on PinkGranite</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>utf-8</language>
    <lastBuildDate>Sun, 12 Apr 2020 19:20:57 +0800</lastBuildDate>
    
	<atom:link href="pinkgranite.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Java GUI 编程</title>
      <link>pinkgranite.github.io/post/javagui%E7%BC%96%E7%A8%8B/</link>
      <pubDate>Sun, 12 Apr 2020 19:20:57 +0800</pubDate>
      
      <guid>pinkgranite.github.io/post/javagui%E7%BC%96%E7%A8%8B/</guid>
      <description>Java GUI编程 组件：
 窗口 弹窗 面板 文本框 列表框 按钮 图片 事件监听 鼠标、键盘事件  1 简介 GUI Java核心开发技术：Swing、AWT
不流行原因：
 Java开发GUI不美观 运行需要jre环境！（浪费空间，玩一个5M的贪吃蛇，要下载一个100M+的运行环境）  为什么要学习：
 可以写出自己的一些小工具 工作的时候，可能会要维护Swing界面（概率小，老公司） 了解MVC的架构，了解监听！  2 AWT 2.1 AWT简介   包含了很多的类和接口供我们使用。 GUI:图形用户界面编程
  元素：窗口、按钮、文本框
  java.awt包
    2.2 组件和容器 1.Frame对象 public class demoFrame01 {public static void main(String[] args) {//设置一个窗口 Frame frame = new Frame(&amp;#34;我的第一个Java窗口&amp;#34;);//设置窗口的可见性 frame.setVisible(true);//设置窗口大小 frame.</description>
    </item>
    
    <item>
      <title>Java基础知识</title>
      <link>pinkgranite.github.io/post/java%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Sat, 11 Apr 2020 19:20:57 +0800</pubDate>
      
      <guid>pinkgranite.github.io/post/java%E5%AD%A6%E4%B9%A0/</guid>
      <description>Java学习笔记 序言 Java的三个版本：  JavaSE（Java Standard Edition）：标准版（桌面程序，控制台DOS开发……） JavaME：嵌入式开发（手机……） JavaEE：企业级开发（web端，服务器开发）   JDK JRE JVM  Hello,World小程序 public class Hello{public void main[String[] args]{System.out.print(&amp;#34;Hello,World!&amp;#34;);}}javac 文件名 得到.class文件
java class文件即可
注意事项：
 Java是一门大小写敏感的语言 文件名和类名一定要一致，并且首字母大写 使用了中文的符号   编译型语言，解释型语言 编译型语言：将高级语言整体先编译为低级语言再执行&amp;mdash;&amp;ndash;需要编译器
解释型语言：边执行边解释
二者各有优劣
​	编译型语言的更新资源消耗更多
​	解释性语言速度较慢
Java语言是结合了编译型与解释型语言：先将.java文件编译成为.class文件（字节码：介于高级与低级语言之间）,具体实现流程为：
​	.class文件 &amp;mdash;》（在JVM中）类加载器 &amp;mdash;》 检查错误 &amp;mdash;》 解释 &amp;mdash;》 执行
  Java基础语法 1.注释 Java中的注释有三种：单行注释、多行注释、文档注释
 单行注释：// 多行注释：/* */ 文档注释：与JavaDOC联合使用，/** */，中间可添加@Description，@Author等   2.标识符，关键字 关键字：系统定义下来的，有特殊意义的“名字”，是不可以再随意更改定义的</description>
    </item>
    
    <item>
      <title>No.2</title>
      <link>pinkgranite.github.io/post/blog2/</link>
      <pubDate>Sat, 11 Apr 2020 14:20:57 +0800</pubDate>
      
      <guid>pinkgranite.github.io/post/blog2/</guid>
      <description>Actually,this is try to push something to th remote origin to find out wether it is OK.</description>
    </item>
    
    <item>
      <title>尝试使用MarkDown来撰写文本</title>
      <link>pinkgranite.github.io/post/day01/</link>
      <pubDate>Sat, 11 Apr 2020 14:20:57 +0800</pubDate>
      
      <guid>pinkgranite.github.io/post/day01/</guid>
      <description>大标题 二级标题 三级标题 文本 hello world!
hello world!
hello world!
hello world!
引用  这里是引用
 分割线   图片 网络图片
超链接 点击跳转到Java学习
列表  这是第一点 这是有序列表第二点   这是无序列表 用一个-号加空格生成  表格    1 1 1                     代码 public *** hhhh插入：关于字体如何设置颜色
 </description>
    </item>
    
    <item>
      <title>No.1</title>
      <link>pinkgranite.github.io/post/blog/</link>
      <pubDate>Sat, 11 Apr 2020 13:47:34 +0800</pubDate>
      
      <guid>pinkgranite.github.io/post/blog/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>